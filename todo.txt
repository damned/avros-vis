*NB: moved previous fine-grained, unprioritised list of UX, tech and ideas to `todo-detail.txt`*

cards - initial priority, grouped by consecutive feature set

* vr layout from basic scene json - entities and edges

[ ] - load entities from json
[ ] - load edges from json
[ ] - snap to grid

* scene creation from repos (services and queues)

[ ] - add services from single repo to scene json (url, dir as e.g. command line variables, probably just grep)
[ ] - enumerate services from json source list (repo url, dir etc.)
[ ] - add topics as entity with edge from publisher via iam (maybe needs terraform run)
[ ] - add queues as edges from topics to consumer via iam

* add datastores (databases and buckets, all from repo parse)

[ ] - add dynamodb tables
[ ] - relate to dynamodb tables by iam
[ ] - add s3 buckets
[ ] - relate to s3 buckets by iam
[ ] - map entity types to styles in static json

* persist layout changes

[ ] - serialize to json (write to console, can be used to overrwrite static json)
[ ] - PUT to server (overwrite named json)
[ ] - PUT copies to timestamped backup before overwrite
[ ] - GET from server on startup

* animate data flows

[ ] - animate example message flow along each queue (triggers every few seconds)
[ ] - happy path flow - animated message triggers next service (happy path assumed as goes on to another service)
[ ] - specify happy path corrections statically (hand coded json)

* add http flows and lambdas

[ ] - add http to lbs via security groups
[ ] - add lbs to ecs via security groups
[ ] - add lambdas
[ ] - add lambdas to datastores
[ ] - add api gateways to lambdas
